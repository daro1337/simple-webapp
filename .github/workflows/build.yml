name: WebApp

on:
  pull_request:
    branches: [ release/*, master ]
  push:
    tags:
      - 'v*.*.*'
env:
  app_repo: daro113377
  app_name: hello-go
jobs:
  testSourceCode:
    name: Test Source Code

    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1' # The Go version to download (if necessary) and use.
      - name: go mod init
        run: go mod init vet
        working-directory: webserver/

      - name: Test code
        run: go vet
        working-directory: webserver/

  buildApp:
    name: Build App

    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [testSourceCode]
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1' # The Go version to download (if necessary) and use.

      - name: build webserver
        run: GOOS=linux GOARCH=386 go build ./server.go
        working-directory: webserver/

      - name: Start Container
        run: docker-compose up -d

      - name: Check Container
        run: docker-compose ps

      - name: Test webapp
        run: curl -s http://localhost

  buildImage:
    name: Build Docker image
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [testSourceCode]
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1' # The Go version to download (if necessary) and use.

      - name: build webserver
        run: GOOS=linux GOARCH=386 go build ./server.go
        working-directory: webserver/

        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build webapp conatiner
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          push: true
          tags: ${{ env.repo }}/${{ env.app_name }}:latest

  testImage:
    name: Test Docker image
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [testSourceCode]
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1' # The Go version to download (if necessary) and use.


      - name: Start docker container
        run: docker run -d -p 80:3000 ${{ env.app_name }}/app:latest

      - name: Test webapp
        run: curl -s http://localhost
